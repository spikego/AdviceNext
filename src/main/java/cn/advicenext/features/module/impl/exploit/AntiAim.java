package cn.advicenext.features.module.impl.exploit;

import cn.advicenext.event.impl.TickEvent;
import cn.advicenext.features.module.Category;
import cn.advicenext.features.module.Module;
import cn.advicenext.features.value.ModeSetting;
import cn.advicenext.features.value.BooleanSetting;
import cn.advicenext.features.value.slider.DoubleSetting;
import cn.advicenext.utility.minecraft.client.RotateUtils;
import java.util.List;

public class AntiAim extends Module {
    private final ModeSetting mode = new ModeSetting("Mode", "Anti-aim mode", "Spin", List.of("Spin", "Jitter", "Random"));
    private final DoubleSetting speed = new DoubleSetting("Speed", "Rotation speed", 10.0, 50.0, 1.0, 1.0);
    private final BooleanSetting movementFix = new BooleanSetting("Movement Fix", "Fix movement for legit appearance", true);
    
    private float currentYaw = 0;
    private boolean jitterDirection = true;
    
    public AntiAim() {
        super("AntiAim", "Silent anti-aim rotation", Category.EXPLOIT);
        this.settings.add(mode);
        this.settings.add(speed);
        this.settings.add(movementFix);
    }
    
    @Override
    public void onTick(TickEvent event) {
        RotateUtils.Rotation rotation = null;
        
        switch (mode.getValue()) {
            case "Spin":
                currentYaw += speed.getValue().floatValue();
                if (currentYaw > 360) currentYaw = 0;
                rotation = new RotateUtils.Rotation(currentYaw, mc.player.getPitch());
                break;
                
            case "Jitter":
                float jitterYaw = mc.player.getYaw();
                if (jitterDirection) {
                    jitterYaw += speed.getValue().floatValue();
                } else {
                    jitterYaw -= speed.getValue().floatValue();
                }
                jitterDirection = !jitterDirection;
                rotation = new RotateUtils.Rotation(jitterYaw, mc.player.getPitch());
                break;
                
            case "Random":
                float randomYaw = (float) (Math.random() * 360);
                float randomPitch = (float) (Math.random() * 180 - 90);
                rotation = new RotateUtils.Rotation(randomYaw, Math.max(-90, Math.min(90, randomPitch)));
                break;
        }
        
        if (rotation != null) {
            RotateUtils.setSilentRotation(rotation, movementFix.getValue());
        }
    }
    
    @Override
    public void onDisable() {
        RotateUtils.resetSilentRotation();
    }
}