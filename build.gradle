plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id 'org.jetbrains.kotlin.jvm'
	id 'application'
	id 'org.openjfx.javafxplugin' version '0.0.8'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}


fabricApi {
	configureDataGeneration {
		client = true
	}
}

javafx {
	version = "11.0.2"
	modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	
	// Fabric Kotlin Language (JIJ)
	modImplementation "net.fabricmc:fabric-language-kotlin:1.12.3+kotlin.2.0.21"
	include "net.fabricmc:fabric-language-kotlin:1.12.3+kotlin.2.0.21"
	
	// WebSocket dependencies
	modImplementation "org.java-websocket:Java-WebSocket:1.5.3"
	modImplementation "com.google.code.gson:gson:2.10.1"

	//lwjgl
	modImplementation "org.lwjgl:lwjgl-harfbuzz:3.3.3"
	modImplementation "org.lwjgl:lwjgl-opengl:3.3.3"

	//lua script
	modImplementation('org.luaj:luaj-jse:3.0.1')
	include 'org.luaj:luaj-jse:3.0.1'

	//javafx
	modImplementation 'org.openjfx:javafx-controls:17.0.2'
	modImplementation 'org.openjfx:javafx-fxml:17.0.2'
	modImplementation 'org.openjfx:javafx-graphics:21.0.2'
	modImplementation 'org.openjfx:javafx-base:17.0.2'
	modImplementation 'org.openjfx:javafx-media:21.0.2'
	modImplementation 'org.openjfx:javafx-web:17.0.2'

	//others
	modImplementation 'com.github.CCBlueX:mc-authlib:1.4.1'
	include 'com.github.CCBlueX:mc-authlib:1.4.1'


}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

kotlin {
	jvmToolchain(21)
}